// Test script to check permissions from within the Electron app
// Run this in the DevTools console of the Electron app

console.log('üîç Testing permissions from Electron app...');

// Test if we can access the main process modules
if (typeof require !== 'undefined') {
  try {
    const { systemPreferences } = require('electron');
    
    console.log('üìä Permission Status Check:');
    
    // Test Screen Recording
    const screenStatus = systemPreferences.getMediaAccessStatus('screen');
    console.log('üì∫ Screen Recording:', screenStatus);
    
    // Test Accessibility
    const accessibilityStatus = systemPreferences.isTrustedAccessibilityClient(false);
    console.log('‚ôø Accessibility:', accessibilityStatus);
    
    // Test Camera
    const cameraStatus = systemPreferences.getMediaAccessStatus('camera');
    console.log('üì∑ Camera:', cameraStatus);
    
    // Summary
    console.log('\nüìã Summary:');
    console.log('- Screen Recording:', screenStatus === 'granted' ? '‚úÖ GRANTED' : '‚ùå DENIED (' + screenStatus + ')');
    console.log('- Accessibility:', accessibilityStatus ? '‚úÖ GRANTED' : '‚ùå DENIED');
    console.log('- Camera:', cameraStatus === 'granted' ? '‚úÖ GRANTED' : '‚ùå DENIED (' + cameraStatus + ')');
    
    // Test active-win
    try {
      const activeWin = require('active-win');
      activeWin().then(result => {
        console.log('üñ•Ô∏è Active Window Detection Test:');
        if (result && result.owner) {
          console.log('‚úÖ App Detection Working:', result.owner.name);
          console.log('üìù Window Title:', result.title);
        } else {
          console.log('‚ùå App Detection Failed: No window detected');
        }
      }).catch(err => {
        console.log('‚ùå Active-Win Error:', err.message);
      });
    } catch (err) {
      console.log('‚ùå Active-Win Module Error:', err.message);
    }
    
  } catch (error) {
    console.log('‚ùå Error accessing Electron modules:', error.message);
  }
} else {
  console.log('‚ùå require() not available - run this in main process or with nodeIntegration enabled');
} 