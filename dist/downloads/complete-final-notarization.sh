#!/bin/bash

echo "üéØ Final Notarization Fix - ShipIt Binary"
echo "========================================"

# Configuration
CERT_NAME="Developer ID Application: Ebdaa Digital Technology (6GW49LK9V9)"
DMG_FILE="TimeFlow-Signed.dmg"
APP_NAME="Ebdaa Work Time.app"
ZIP_FILE="TimeFlow-final-notarized.zip"

echo "üìã Fixing the specific issue Apple identified:"
echo "   Squirrel.framework/Resources/ShipIt is not signed"
echo ""

# Clean up any previous attempts
rm -rf "$APP_NAME" "$ZIP_FILE"

# Extract app
echo "üì¶ Extracting app from DMG..."
hdiutil attach "$DMG_FILE" -mountpoint /tmp/final_fix_mount -quiet
cp -R "/tmp/final_fix_mount/$APP_NAME" ./
hdiutil detach /tmp/final_fix_mount -quiet
echo "‚úÖ App extracted"

# Create entitlements
echo "üìù Creating entitlements..."
cat > final-entitlements.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>com.apple.security.cs.allow-jit</key>
    <true/>
    <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
    <true/>
    <key>com.apple.security.cs.disable-library-validation</key>
    <true/>
    <key>com.apple.security.network.client</key>
    <true/>
    <key>com.apple.security.files.user-selected.read-write</key>
    <true/>
    <key>com.apple.security.files.downloads.read-write</key>
    <true/>
    <key>com.apple.security.automation.apple-events</key>
    <true/>
</dict>
</plist>
EOF

# Specifically target the problematic ShipIt binary
SHIPIT_BINARY="$APP_NAME/Contents/Frameworks/Squirrel.framework/Versions/A/Resources/ShipIt"

echo ""
echo "üéØ Targeting the specific ShipIt binary..."
echo "File: $SHIPIT_BINARY"

if [ -f "$SHIPIT_BINARY" ]; then
    echo "‚úÖ Found ShipIt binary"
    
    # Check current signature
    echo "üîç Current signature status:"
    codesign -dv "$SHIPIT_BINARY" 2>&1 || echo "   Not signed"
    
    # Sign the ShipIt binary specifically
    echo ""
    echo "üîê Signing ShipIt binary..."
    codesign --remove-signature "$SHIPIT_BINARY" 2>/dev/null || true
    codesign --force --options runtime \
        --sign "$CERT_NAME" \
        --timestamp \
        "$SHIPIT_BINARY"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ ShipIt binary signed successfully"
        
        # Verify the ShipIt signature
        echo "üîç Verifying ShipIt signature..."
        codesign --verify --verbose "$SHIPIT_BINARY"
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ ShipIt signature verification passed"
            
            # Re-sign the Squirrel framework
            echo ""
            echo "üîê Re-signing Squirrel framework..."
            SQUIRREL_FRAMEWORK="$APP_NAME/Contents/Frameworks/Squirrel.framework"
            codesign --force --options runtime \
                --sign "$CERT_NAME" \
                --timestamp \
                "$SQUIRREL_FRAMEWORK"
            
            if [ $? -eq 0 ]; then
                echo "‚úÖ Squirrel framework re-signed"
                
                # Re-sign the main app
                echo ""
                echo "üîê Re-signing main app..."
                codesign --force --options runtime \
                    --entitlements final-entitlements.plist \
                    --sign "$CERT_NAME" \
                    --timestamp \
                    "$APP_NAME"
                
                if [ $? -eq 0 ]; then
                    echo "‚úÖ Main app re-signed"
                    
                    # Final verification
                    echo ""
                    echo "üîç Final verification..."
                    codesign --verify --verbose --deep "$APP_NAME"
                    
                    if [ $? -eq 0 ]; then
                        echo "‚úÖ Complete signature verification passed!"
                        
                        # Create ZIP for notarization
                        echo ""
                        echo "üìÅ Creating final ZIP..."
                        ditto -c -k --keepParent "$APP_NAME" "$ZIP_FILE"
                        echo "‚úÖ ZIP created: $(ls -lh "$ZIP_FILE" | awk '{print $5}')"
                        
                        echo ""
                        echo "üéâ Ready for final notarization attempt!"
                        echo "======================================"
                        echo "All issues fixed:"
                        echo "‚úÖ ShipIt binary properly signed"
                        echo "‚úÖ Squirrel framework re-signed"
                        echo "‚úÖ Main app re-signed"
                        echo "‚úÖ Deep verification passed"
                        echo ""
                        echo "üöÄ Run this to submit:"
                        echo "xcrun notarytool submit $ZIP_FILE \\"
                        echo "  --apple-id alshqawe66@gmail.com \\"
                        echo "  --team-id 6GW49LK9V9 \\"
                        echo "  --password [YOUR_APP_SPECIFIC_PASSWORD] \\"
                        echo "  --wait"
                        
                    else
                        echo "‚ùå Final verification failed"
                    fi
                else
                    echo "‚ùå Main app signing failed"
                fi
            else
                echo "‚ùå Squirrel framework signing failed"
            fi
        else
            echo "‚ùå ShipIt signature verification failed"
        fi
    else
        echo "‚ùå ShipIt signing failed"
    fi
else
    echo "‚ùå ShipIt binary not found at: $SHIPIT_BINARY"
    echo "üîç Searching for ShipIt..."
    find "$APP_NAME" -name "ShipIt" -type f
fi

# Cleanup
rm -f final-entitlements.plist

echo ""
echo "üéØ This should be the final fix needed for notarization!" 